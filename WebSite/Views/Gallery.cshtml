@using System.Web.Optimization;
@using Site.Helpers;
@using Site.Models;
@inherits UmbracoTemplatePage
@{
    Layout = "LayoutBase.cshtml";

    // If the editor has not explicitly provided the "Page title" property page
    // then just show the name of the page otherwise show the provided title
    var pageTitle = string.IsNullOrWhiteSpace(CurrentPage.Title)
        ? CurrentPage.Name
        : CurrentPage.Title;

    var dataTypeService = ApplicationContext.Current.Services.DataTypeService;
    var subGalleries = CurrentPage.GalleryCategories;
    var allMedia = new List<CategorizedMedia>();
    foreach (var subGallery in subGalleries)
    {
        var category = subGallery.Category;
        var mediaStr = (string)subGallery.Images;
        var mediaIds = mediaStr.Split(new[] { "," }, StringSplitOptions.RemoveEmptyEntries);
        var media = Umbraco.TypedMedia(mediaIds).ToList();
        //check for folders
        var folders = media.Where(i => i.DocumentTypeAlias == "Folder").ToList();
        folders.ForEach(i => media.Remove(i));
        media.AddRange(folders.SelectMany(i => i.Children.Where(j => j.DocumentTypeAlias == "Image")));

        allMedia.AddRange(media.Select(i => new CategorizedMedia
        {
            Media = i,
            Category = category.ToLower()
        }));
    }
    allMedia = allMedia.RandomOrder().ToList(); //chaoticly order images

    var imageCategories = Helper.GetDataTypePreValues(
        dataTypeService,
        SiteConstants.ImageCategoryDataType);
    var widthPerCategory = 24 / (imageCategories.Count() + 1);
}

<div class="main-wrapper">
    <div class="container">
        <div class="gallery-categories">
            <div class="row">
                @RenderCategory("All", true, widthPerCategory)
                @foreach (var imageCategory in imageCategories)
                {
                    @RenderCategory(@imageCategory, false, widthPerCategory)
                }
            </div>
        </div>
    </div>
    <div class="container-fluid">
        <div class="gallery-images">
            @*<div class="gallery-item masonry-item"></div>*@
            @foreach (var media in allMedia)
            {
                @RenderImage(@media)
            }
        </div>
    </div>
    <script type="text/javascript">
        $(function () {
            InitGallery();
        });
    </script>
</div>

@helper RenderCategory(string name, bool isActive, int widthPerCategory)
{
    <div class="col-sm-@widthPerCategory text-center">
        <h4 class="@(isActive ? "active": null) gallery-category">
            @name.ToUpperInvariant()
        </h4>
    </div>
}

@helper RenderImage(CategorizedMedia categorizedMedia)
{
    var category = categorizedMedia.Category;
    var media = categorizedMedia.Media;
    <div class="@category gallery-item masonry-item">
        <a href="@media.Url" title="@media.Name">
            <img data-src="@Html.GetThumbnailUrl((string)media.Url)" alt="" class="not-loaded" />
        </a>
    </div>
}